import React, { useRef, useState } from 'react';
import emailjs from '@emailjs/browser';
import '../styles/ContactForm.css';

const ContactForm = () => {
  const form = useRef();
  const [isSubmitting, setIsSubmitting] = useState(false);
  const [status, setStatus] = useState(null);
  const [focusedField, setFocusedField] = useState(null);

  const sendEmail = (e) => {
    e.preventDefault();
    setIsSubmitting(true);

    emailjs.sendForm(
      'service_51padbf',
      'template_j81kgo5',
      form.current,
      '2g-WnZ8whoiGaXM2Z'
    )
    .then(() => {
      setStatus({ type: 'success', message: '✓ Mensaje enviado' });
      form.current.reset();
    }, () => {
      setStatus({ type: 'error', message: '✗ Error al enviar' });
    })
    .finally(() => setIsSubmitting(false));
  };

  const handleFocus = (fieldName) => {
    setFocusedField(fieldName);
  };

  const handleBlur = () => {
    setFocusedField(null);
  };

  return (
    <div className="minimal-form-container">
      <p className="form-intro animate-text">Estaremos encantados de escucharte</p>
      
      <form ref={form} onSubmit={sendEmail} className="minimal-form">
        <div className={`input-group ${focusedField === 'name' ? 'focused' : ''}`}>
          <input 
            type="text" 
            name="user_name" 
            placeholder="Nombre" 
            required 
            onFocus={() => handleFocus('name')}
            onBlur={handleBlur}
          />
          <div className="input-line"></div>
          <div className="focus-dot"></div>
        </div>

        <div className={`input-group ${focusedField === 'email' ? 'focused' : ''}`}>
          <input 
            type="email" 
            name="user_email" 
            placeholder="Correo" 
            required 
            onFocus={() => handleFocus('email')}
            onBlur={handleBlur}
          />
          <div className="input-line"></div>
          <div className="focus-dot"></div>
        </div>

        <div className={`input-group ${focusedField === 'subject' ? 'focused' : ''}`}>
          <input 
            type="text" 
            name="subject" 
            placeholder="Asunto" 
            required 
            onFocus={() => handleFocus('subject')}
            onBlur={handleBlur}
          />
          <div className="input-line"></div>
          <div className="focus-dot"></div>
        </div>

        <div className={`input-group ${focusedField === 'message' ? 'focused' : ''}`}>
          <textarea 
            name="message" 
            placeholder="Cuéntanos sobre ti" 
            rows="3" 
            required
            onFocus={() => handleFocus('message')}
            onBlur={handleBlur}
          ></textarea>
          <div className="input-line"></div>
          <div className="focus-dot"></div>
        </div>

        <button 
          type="submit" 
          disabled={isSubmitting} 
          className={`submit-btn ${isSubmitting ? 'pulse' : 'hover-effect'}`}
        >
          {isSubmitting ? (
            <>
              <span className="btn-loader"></span>
              Enviando...
            </>
          ) : (
            'Enviar Mensaje →'
          )}
        </button>

        {status && (
          <div className={`status-message ${status.type} fade-in`}>
            {status.message}
          </div>
        )}
      </form>
    </div>
  );
};

export default ContactForm;